{
    "1": [
        "-ask2checkout(guestName: String, roomId: int): void",
        "+checkout(roomId: int): void",
        "-workerName: String",
        "Dispatcher",
        "clean",
        "isCleanOperation()"
    ],
    "2": [
        "DIS_REC_CHECKIN_FAILED",
        "replyCheckOut(request);",
        "arrangeClean4CheckOut(request);",
        "arrangeCleanOnly(Request request)",
        "RoomState.OCCUPIED",
        "RequestTag.DIS_CLE_CLEAN_CHECKOUT.equals(request.getRequestTag())"
    ],
    "3": "由Worker类派生出Receptionist, Dispatcher, Cleaner三个类，分别完成各自工作，进行不同的服务，三者之间的通信由Controller类同一调度管理，而不是互相调用，体现了低耦合。减少不同模块之间的互相调用，可以减少因为引用或是错误调用方法产生bug的几率。"

}